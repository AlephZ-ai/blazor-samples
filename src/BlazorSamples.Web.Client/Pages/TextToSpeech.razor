@page "/text-to-speech"
@using BlazorSamples.Shared
@using BlazorSamples.PlayHT.Protos.V1
@using Grpc.Core
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@inject Tts.TtsClient client

<PageTitle>Text to Speech</PageTitle>

<h1>Text to Speech</h1>


<EditForm Enhance Model="request" OnSubmit="SubmitAsync">
    <div class="form-group">
        <label for="Message">Question</label>
        <InputTextArea id="Message" class="form-control" rows="3" @bind-Value="request.Message" />
    </div>

    <button type="submit" class="btn btn-primary">Send</button>
</EditForm>

@code {
    private ChatRequest request = new() { Message = "This is a test of the automatic broadcast system.  This is only a test." };
    private async Task SubmitAsync()
    {
        var request = new TtsRequest
        {
            Params = new()
            {
                Text   = { "This is a test of the automatic broadcast system.  This is only a test." },
                Voice = "s3://peregrine-voices/oliver_narrative2_parrot_saad/manifest.json",
                Format = Format.Mp3,
                Temperature = 1.5f,
                Quality = Quality.Premium,
                Speed = 0.8f,
                SpeechAttributes = 9,
                StyleGuidance = 16,
            }
        };

        var response = client.Tts(request);
        await foreach (var item in response.ResponseStream.ReadAllAsync())
        {
        }
    }
}
