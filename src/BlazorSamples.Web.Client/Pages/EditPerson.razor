@using BlazorSamples.Shared
@using BlazorSamples.Shared.Clients
@page "/edit-person"
@page "/edit-person/{id:int}"
@rendermode @(new InteractiveAutoRenderMode(prerender: false))
@inject NavigationManager NavigationManager
@inject ApiClient Api

@if (id is null)
{
    <PageTitle>Add Person</PageTitle>
    <h1>Add Person</h1>
    <p>This component demonstrates adding data.</p>
}
else
{
    @if (person is null)
    {
        <PageTitle>Edit Person</PageTitle>
        <p><em>Loading...</em></p>
    }
    else
    {
        <PageTitle>Edit @person.FirstName @person.LastName</PageTitle>
        <h1>Edit @person.FirstName @person.LastName</h1>
        <p>This component demonstrates editing data.</p>
    }
}

@if (person is not null)
{
    <EditForm Enhance Model="person" OnSubmit="SubmitAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="FirstName">First Name</label>
            <InputText id="FirstName" class="form-control" @bind-Value="person.FirstName" />
        </div>

        <div class="form-group">
            <label for="LastName">Last Name</label>
            <InputText id="LastName" class="form-control" @bind-Value="person.LastName" />
        </div>

        <div class="form-group">
            <label for="Age">Age</label>
            <InputNumber id="Age" class="form-control" @bind-Value="person.Age" />
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    [Parameter]
    public int? id { get; set; }
    private Person? person;

    protected override Task OnInitializedAsync()
    {
        return LoadPersonAsync();
    }

    private async Task SubmitAsync()
    {
        if (id is null)
        {
            await Api.CreatePersonAsync(person!);
        }
        else
        {
            await Api.UpdatePersonAsync(person!);
        }
       
        NavigationManager.NavigateTo("/people");
    }

    private async Task LoadPersonAsync()
    {
        if (id is null)
        {
            person = new();
        }
        else
        {
            person = await Api.GetPersonAsync(id.Value);
        }
    }
}
